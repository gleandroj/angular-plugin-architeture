{"version":3,"sources":["ng://lazylib/lib/lazylib.service.ts","ng://lazylib/lib/lazylib.component.ts","ng://lazylib/lib/lazylib.module.ts"],"names":["LazylibService","t","providedIn","Injectable","LazylibComponent","service","this","prototype","ngOnInit","hello","core","ɵɵdirectiveInject","lazylib2","Lazylib2Service","consts","vars","template","rf","ctx","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","Component","routes","component","path","LazylibModule","prefix","menus","title","type","providers","imports","RouterModule","forChild","router","NgModule"],"mappings":"4XAOE,SAAAA,gFAFW,OAAA,IAAcC,GAAAD,IAAAE,WAAA,cAH1BC,EAAAA,4BCYC,SAAAC,EACUC,GAAAC,KAAAD,QAAAA,SAGVD,EAAAG,UAAAC,SAAA,WACEF,KAAKD,QAAQI,0GAPJ,OAAA,IAAAR,GAAAG,GAAAM,EAAAC,kBAAAC,EAAAC,mBAAAC,OAAA,EAAAC,KAAA,EAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IANTE,EAAAA,eAAAA,EAAAA,KACEC,EAAAA,OAAAA,EAAAA,oBACFC,EAAAA,wCALHC,EAAAA,UCCD,IAAMC,EAAiB,CACrB,CACEC,UAAWpB,EACXqB,KAAM,KAIVC,EAAA,WAAA,SAAAA,YAWSA,EAAAC,OAAS,WACTD,EAAAE,MAAQ,CACb,CACEH,KAAM,IACNI,MAAO,+CALaC,KAAAJ,4DAAb,OAAA,IAAAzB,GAAAyB,IAJAK,UAAA,GAAAC,QAAA,CAAA,CAHTC,EAAAA,aAAaC,SAASX,SAH1B,GACiCY,EAAAF,aADhCG,EAAAA,SAGGH,EAAAA,aAAaC,SAASX","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LazylibService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Lazylib2Service } from 'lazylib2';\n\n@Component({\n  selector: 'lazylib-lazylib',\n  template: `\n    <p>\n      lazylib works!\n    </p>\n  `,\n  styles: []\n})\nexport class LazylibComponent implements OnInit {\n\n  constructor(\n    private service: Lazylib2Service\n  ) { }\n\n  ngOnInit() {\n    this.service.hello();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { LazylibComponent } from './lazylib.component';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    component: LazylibComponent,\n    path: ''\n  }\n];\n\n@NgModule({\n  declarations: [LazylibComponent],\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [LazylibComponent],\n  providers: [\n\n  ]\n})\nexport class LazylibModule {\n  static prefix = 'lazy-lib';\n  static menus = [\n    {\n      path: '/',\n      title: 'Lazy Lib'\n    }\n  ];\n}\n"]}